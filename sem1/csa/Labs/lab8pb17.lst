     1                                  bits 32 ;assembling for the 32 bits architecture
     2                                  global start
     3                                  
     4                                  ; we ask the assembler to give global visibility to the symbol called start 
     5                                  ;(the start label will be the entry point in the program) 
     6                                  extern exit ; we inform the assembler that the exit symbol is foreign; it exists even if we won't be defining it
     7                                  extern scanf
     8                                  extern printf
     9                                  import exit msvcrt.dll  ; we specify the external library that defines the symbol
    10                                  import scanf msvcrt.dll
    11                                  import printf msvcrt.dll
    12                                          ; msvcrt.dll contains exit, printf and all the other important C-runtime functions
    13                                  
    14                                  ; our variables are declared here (the segment is called data) 
    15                                  segment data use32 class=data
    16                                  
    17 00000000 00000000                    input dd 0
    18 00000004 496E74726F64756365-         inputMessage db "Introduceti un numar in baza 10:", 0
    18 0000000D 746920756E206E756D-
    18 00000016 617220696E2062617A-
    18 0000001F 612031303A00       
    19 00000025 4E756D6172756C2063-         message  db "Numarul citit in baza 16: %x", 0
    19 0000002E 6974697420696E2062-
    19 00000037 617A612031363A2025-
    19 00000040 7800               
    20 00000042 256400                      format db "%d", 0
    21                                      
    22                                  segment code use32 class=code
    23                                  start:
    24                                  ;    Read a number in base 10 from the keyboard and display the value of that number in base 16
    25                                      ;scanf("%d", input) , printf('numar: %d', 10)
    26                                      
    27                                      ;print  'Introduceti numarul:'
    28 00000000 68[04000000]                push dword inputMessage
    29 00000005 FF15[00000000]              call [printf]
    30 0000000B 83C404                      add esp, 4
    31                                      ;citirea numarului
    32 0000000E 68[00000000]                push dword input
    33 00000013 68[42000000]                push dword format
    34 00000018 FF15[00000000]              call [scanf]
    35 0000001E 83C408                      add esp, 4*2
    36                                      ;printarea in format hexa(%x)
    37 00000021 FF35[00000000]              push dword &input
    38 00000027 68[25000000]                push dword message
    39 0000002C FF15[00000000]              call [printf]
    40 00000032 83C408                      add esp, 4*2
    41                                      
    42 00000035 6A00                        push dword 0 ; saves on stack the parameter of the function exit
    43 00000037 FF15[00000000]              call [exit] ; function exit is called in order to end the execution of the program
